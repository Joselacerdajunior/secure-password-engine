version: "3"
name: secure-password
services:
  postgres:
    container_name: postgresql      
    image: postgres:14.5
    environment:
      POSTGRES_DB: ${ENV_POSTGRES_DB}
      POSTGRES_USER: ${ENV_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ENV_POSTGRES_PASSWORD}
      TZ: ${ENV_TZ}
    volumes:
      - ./db_volume:/var/lib/postgresql/data
      - ./ConfigPostgreSQL/create_metabase_database.sql:/docker-entrypoint-initdb.d/create_metabase_database.sql
    ports:
      - ${ENV_POSTGRES_PORTS}
    networks:
      - postgres-secure-password-network

  pgadmin:
    container_name: pgadmin4  
    image: dpage/pgadmin4
    restart: always
    tty: false
    stdin_open: false
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ENV_PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ENV_PGADMIN_DEFAULT_PASSWORD}
    ports:
      - ${ENV_PGADMIN_PORTS}
    volumes:
      - ./ConfigPgAdmin/servers.json:/pgadmin4/servers.json
      - ./ConfigPgAdmin/pgpass:/pgpass
    depends_on:
      - postgres
    networks:
      - postgres-secure-password-network

  metabase:    
    image: metabase/metabase:latest
    container_name: metabase
    environment:            
      MB_DB_TYPE: ${ENV_MB_DB_TYPE}
      MB_DB_DBNAME: ${ENV_MB_DB_DBNAME}
      MB_DB_PORT: ${ENV_MB_DB_PORT}
      MB_DB_USER: ${ENV_MB_DB_USER}
      MB_DB_PASS: ${ENV_MB_DB_PASS}
      MB_DB_HOST: ${ENV_MB_DB_HOST}
    ports:      
      - ${ENV_METABASE_PORTS}
    networks:
      - postgres-secure-password-network
    
  apache:
    container_name: phpapache
    build: 
      context: ./ConfigApache
      args:
        UID: ${ENV_UID}
        USER: ${ENV_USER}
        GITHUB_PROJECT_URL: ${ENV_GITHUB_PROJECT_URL}
        GIT_WGET_PATH: ${ENV_GIT_WGET_PATH}
        GITHUB_PROJECT_NAME: ${ENV_GITHUB_PROJECT_NAME}
        PROJECT_PATH: ${ENV_PROJECT_PATH}
      dockerfile: Dockerfile        
    restart: always
    ports:
      - ${ENV_APACHE_PORTS}
    depends_on:
      - pgadmin
    links:
      - pgadmin 
    networks:
      - postgres-secure-password-network

volumes:
  db_volume:
    external: true      

networks: 
  postgres-secure-password-network:
    driver: bridge
